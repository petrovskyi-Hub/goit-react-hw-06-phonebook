{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/Contacts/contacts-actions.js","redux/Contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","redux/Filter/filter-actions.js","redux/Filter/filter-selectors.js","components/Filter/Filter.js","services/StorageServices.js","App.js","redux/Contacts/contacts-reducer.js","redux/Filter/filter-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","Container","children","className","s","container","addContact","createAction","deleteContact","getContacts","state","contacts","items","getFilteredContacts","normalizedFilter","filter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","form","onSubmit","preventDefault","find","alert","trim","test","label","input","type","onChange","placeholder","btn","ContactList","filteredContacts","list","map","id","item","info","onClick","setFilter","getFilter","Filter","event","load","key","localData","localStorage","getItem","undefined","JSON","parse","err","console","error","save","stringify","setItem","connect","useEffect","storage","length","itemsReducer","createReducer","action","shortid","generate","payload","filterReducer","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e3c3d6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1DRxE\",\"input\":\"Filter_input__2QcjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3FVBf\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/addContact');\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\n","export const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = state.contacts.filter;\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/Contacts/contacts-actions';\r\nimport { getContacts } from '../../redux/Contacts/contacts-selectors';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`ðŸ¤” ${name} is already in contacts.`);\r\n    } else if (contacts.find(contact => contact.number === number)) {\r\n      alert(`ðŸ¤” ${number} is already in contacts.`);\r\n    } else if (name.trim() === '' || number.trim() === '') {\r\n      alert(\"ðŸ˜± Enter the contact's name and number phone!\");\r\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\r\n      alert('ðŸ’© Enter the correct number phone!');\r\n    } else {\r\n      dispatch(addContact(contact));\r\n    }\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          placeholder=\"Name Sername\"\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          placeholder=\"xxx-xx-xx\"\r\n        />\r\n      </label>\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport s from './ContactsList.module.css';\r\nimport { deleteContact } from '../../redux/Contacts/contacts-actions';\r\nimport { getFilteredContacts } from '../../redux/Contacts/contacts-selectors';\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <p className={s.info}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const setFilter = createAction('filter/setFilter');\r\n","export const getFilter = state => state.contacts.filter;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport s from './Filter.module.css';\r\nimport { setFilter } from '../../redux/Filter/filter-actions';\r\nimport { getFilter } from '../../redux/Filter/filter-selectors';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event => dispatch(setFilter(event.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","// ÐŸÑ€Ð¸Ð½Ð¸Ð¼Ð°ÐµÑ‚ ÐºÐ»ÑŽÑ‡ `key` Ð¿Ð¾ ÐºÐ¾Ñ‚Ð¾Ñ€Ð¾Ð¼Ñƒ Ð±ÑƒÐ´ÐµÑ‚ Ð¿Ñ€Ð¾Ð¸Ð·Ð²ÐµÐ´ÐµÐ½Ð° Ð²Ñ‹Ð±Ð¾Ñ€ÐºÐ°.\r\nconst load = key => {\r\n  try {\r\n    const localData = localStorage.getItem(key);\r\n    localStorage.getItem('last-tab');\r\n\r\n    return localData === null ? undefined : JSON.parse(localData);\r\n  } catch (err) {\r\n    console.error('Get state error: ', err);\r\n  }\r\n};\r\n\r\n// ÐŸÑ€Ð¸Ð½Ð¸Ð¼Ð°ÐµÑ‚ ÐºÐ»ÑŽÑ‡ `key` Ð¸ Ð·Ð½Ð°Ñ‡ÐµÐ½Ð¸Ðµ `value`.\r\nconst save = (key, value) => {\r\n  try {\r\n    const localData = JSON.stringify(value);\r\n    localStorage.setItem(key, localData);\r\n  } catch (err) {\r\n    console.error('Set state error: ', err);\r\n  }\r\n};\r\n\r\n// ÐŸÑ€Ð¸Ð½Ð¸Ð¼Ð°ÐµÑ‚ ÐºÐ»ÑŽÑ‡ `key` Ð¸ Ð·Ð½Ð°Ñ‡ÐµÐ½Ð¸Ðµ `value`.\r\nconst remove = (key, value) => {\r\n  const localData = load(key);\r\n  localData.splice(localData.indexOf(value), 1);\r\n  save(key, localData);\r\n};\r\n\r\nexport default { load, save, remove };\r\n","import { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport './App.css';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport storage from './services/StorageServices';\n\n// storage.save('Contacts', [\n//   { id: shortid.generate(), name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: shortid.generate(), name: 'Hermione Kline', number: '443-89-12' },\n//   { id: shortid.generate(), name: 'Eden Clements', number: '645-17-79' },\n//   { id: shortid.generate(), name: 'Annie Copeland', number: '227-91-26' },\n// ]);\n\nfunction App({ contacts }) {\n  useEffect(() => {\n    storage.save('Contacts', contacts);\n  }, [contacts]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      {contacts.length > 1 && <Filter />}\n      {contacts.length > 0 ? (\n        <ContactsList />\n      ) : (\n        <p>Your phonebook is empty. Please add contact.</p>\n      )}\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts.items,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { addContact, deleteContact } from './contacts-actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\nimport storage from '../../services/StorageServices';\r\n\r\nexport const itemsReducer = createReducer(storage.load('Contacts') ?? [], {\r\n  [addContact]: (state, action) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: action.payload.name,\r\n      number: action.payload.number,\r\n    };\r\n\r\n    return [...state, contact];\r\n  },\r\n\r\n  [deleteContact]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { setFilter } from './filter-actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [setFilter]: (state, action) => action.payload,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { itemsReducer } from './Contacts/contacts-reducer';\r\nimport { filterReducer } from './Filter/filter-reducer';\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1CRQ5\",\"label\":\"ContactForm_label__5oo5b\",\"input\":\"ContactForm_input__vDEjP\",\"btn\":\"ContactForm_btn__1jCWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__15Fbb\",\"item\":\"ContactsList_item__1D1ny\",\"info\":\"ContactsList_info__2MOzh\",\"btn\":\"ContactsList_btn__29Z-5\"};"],"sourceRoot":""}